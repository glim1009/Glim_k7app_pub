@use 'sass:map';
@use '../abstracts/variables';
@use '../abstracts/mixins';

/* badge common style */
%badgeCommonStyle {
  display: inline-block;
  vertical-align: top;
  text-align: center;
  border: solid 1px transparent;

  .text { // 뱃지 텍스트 공통
    @include mixins.font_size_xs(sb);
    position: relative;
    display: inline-block;
    vertical-align: top;
  }
}

/* badge size */
%badgeMd {
  @extend %badgeCommonStyle;
  padding: 1px 8px;
  height: 22px;
  border-radius: 11px;
}

%badgeSm {
  @extend %badgeCommonStyle;
  padding: 0 4px;
  height: 18px;
  border-radius: 9px;

  @include mixins.device_mobile_aos {
    padding-top: 2px;
  }
}

/* badge color*/
%badgeGreen {
  background: variables.$colorGreen100;
  border-color: variables.$colorGreen100;

  .text {
    color: variables.$colorWhite;
  }
}

%badgeLightGreen {
  background: variables.$colorGreen10;
  border-color: variables.$colorGreen10;

  .text {
    color: variables.$colorGreen100;
  }
}

%badgeLineGreen {
  background: variables.$colorWhite;
  border-color: variables.$colorGreen100;

  .text {
    color: variables.$colorGreen100;
  }
}

%badgeOrange {
  background: variables.$colorOrange100;
  border-color: variables.$colorOrange100;

  .text {
    color: variables.$colorWhite;
  }
}

%badgeLightOrange {
  background: variables.$colorOrange10;
  border-color: variables.$colorOrange10;

  .text {
    color: variables.$colorOrange100;
  }
}

%badgeLineOrange {
  background: variables.$colorWhite;
  border-color: variables.$colorOrange100;

  .text {
    color: variables.$colorOrange100;
  }
}

%badgeRed {
  background: variables.$colorRed100;
  border-color: variables.$colorRed100;

  .text {
    color: variables.$colorWhite;
  }
}

%badgeLightRed {
  background: variables.$colorRed10;
  border-color: variables.$colorRed10;

  .text {
    color: variables.$colorRed100;
  }
}

%badgeLineRed {
  background: variables.$colorWhite;
  border-color: variables.$colorRed100;

  .text {
    color: variables.$colorRed100;
  }
}

%badgeGray {
  background: variables.$colorGray80;
  border-color: variables.$colorGray80;

  .text {
    color: variables.$colorWhite;
  }
}

%badgeLightGray {
  background: variables.$colorGray20;
  border-color: variables.$colorGray20;

  .text {
    color: variables.$colorGray80;
  }
}

%badgeLineGray {
  background: variables.$colorWhite;
  border-color: variables.$colorGray80;

  .text {
    color: variables.$colorGray80;
  }
}

.badge {
  // green type
  &-green {
    &-md {
      @extend %badgeMd;
      @extend %badgeGreen;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeGreen;
    }
  }

  &-light-green {
    &-md {
      @extend %badgeMd;
      @extend %badgeLightGreen;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeLightGreen;
    }
  }

  &-line-green {
    &-md {
      @extend %badgeMd;
      @extend %badgeLineGreen;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeLineGreen;
    }
  }

  // orange type
  &-orange {
    &-md {
      @extend %badgeMd;
      @extend %badgeOrange;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeOrange;
    }
  }

  &-light-orange {
    &-md {
      @extend %badgeMd;
      @extend %badgeLightOrange;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeLightOrange;
    }
  }

  &-line-orange {
    &-md {
      @extend %badgeMd;
      @extend %badgeLineOrange;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeLineOrange;
    }
  }

  // red type
  &-red {
    &-md {
      @extend %badgeMd;
      @extend %badgeRed;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeRed;
    }
  }

  &-light-red {
    &-md {
      @extend %badgeMd;
      @extend %badgeLightRed;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeLightRed;
    }
  }

  &-line-red {
    &-md {
      @extend %badgeMd;
      @extend %badgeLineRed;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeLineRed;
    }
  }

  // gray type
  &-gray {
    &-md {
      @extend %badgeMd;
      @extend %badgeGray;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeGray;
    }
  }

  &-light-gray {
    &-md {
      @extend %badgeMd;
      @extend %badgeLightGray;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeLightGray;
    }
  }

  &-line-gray {
    &-md {
      @extend %badgeMd;
      @extend %badgeLineGray;
    }

    &-sm {
      @extend %badgeSm;
      @extend %badgeLineGray;
    }
  }
}

/* // badge */

/* badge-group */
// $badgeGap: ( 'md', 'lg');
$groupSize: ('bmd': 4px, 'blg': 6px, 'bxl': 10px);

%badgeGroup {
  @include mixins.justify_width;
  flex-wrap: wrap;
  font-size: 0;
}

%badgeGapStyle {
  &[class*=-md][class$=group] {
    margin-top: -4px;
    margin-left: -4px;

    [class^=badge-] {
      margin: {
        top: 4px;
        left: 4px;
      }
    }
  }
  &[class*=-lg][class$=group] {
    // 작업 예정
  }
}


[class^=badge][class*=group] {
  @extend %badgeGapStyle;
}

@each $size, $px in $groupSize {
  .badge-md-#{$size}-group, .badge-lg-#{$size}-group {
    @extend %badgeGroup;
    margin-bottom: $px;
  }
}

/* // badge-group */

// badge-group > tooltip

[class^=badge-md][class*=group] {
  .tooltip {
    margin: {
      top: 4px;
      left: 4px;
    }
  }
}
