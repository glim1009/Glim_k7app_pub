@use 'sass:map';
@use '../abstracts/variables';
@use '../abstracts/mixins';

/* s: contWrap */

$contType: ('gray', 'white', 'divider'); // white - bg-color: white, divider - 추후 추가 예정
$contDirsSize: ('zero': 0, 'sm' : 10px, 'md': 20px, 'lg': 30px);


.container-wrapper:has(.cont-docker-wrap) {
  [class*="cont-"]:nth-of-type(2) {
    flex: 1 0 auto;
    padding-bottom: #{variables.$contDockerHeight + 30px};
  }
}

%contBoxCommon {
  padding: {
    left: 15px;
    bottom: 30px;
    right: 15px;
  }

  &[class*="bz-"] {
    padding-bottom: 0 !important;
  }

  &.side-zero {
    padding: {
      left: 0;
      right: 0;
    }
  }

  &:last-of-type {
    flex: 1 0 auto;
  }
}

// cont style type
@mixin cont_type_style($type: 'gray') {
  @if ($type == 'gray') {
    background-color: variables.$colorGray20;
  }
  @else if ($type == 'divider') {
    background-color: variables.$colorWhite;
    border-top: 20px solid variables.$colorGray20;
  }
  @else if ($type == 'white') {
    background-color: variables.$colorWhite;
  }
}

@each $size, $px in $contDirsSize {
  // md 제외
  @if ($size != 'md') {
    @each $type in $contType {
      // gray 제외
      @if ($type != 'gray') {
        .cont-#{$type}-#{$size}-wrap, .cont-#{$type}-#{$size}bz-wrap {
          @extend %contBoxCommon;
          padding-top: $px;
          @include cont_type_style($type);
        }
      }
      @else {
        .cont-#{$size}-wrap, .cont-#{$size}bz-wrap {
          @extend %contBoxCommon;
          padding-top: $px;
          @include cont_type_style($type);
        }
      }
    }
  }
    /* md */
  @else {
    @each $type in $contType {
      @if ($type != 'gray') {
        .cont-#{$type}-wrap, .cont-#{$type}bz-wrap {
          @extend %contBoxCommon;
          padding-top: $px;
          @include cont_type_style($type);
        }
      }
        // gray
      @else {
        .cont-wrap, .cont-bz-wrap {
          @extend %contBoxCommon;
          padding-top: $px;
          @include cont_type_style($type);
        }
      }
    }
  }
}

/* e: contWrap */
