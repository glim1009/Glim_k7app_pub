@use 'sass:map';
@use '../abstracts/variables';
@use '../abstracts/mixins';

$listGapSize: ('sm': 6px, 'lg': 16px, 'xl': 24px, 'all-menu': 16px 0);
$wrapSize: ('xs': 10px, 'sm': 16px, 'md': 24px, 'lg': 30px);

/* list */
// Wrap
%gridWrapComm {
  &.side-box {
    margin: {
      left: -5px;
      right: -5px;
    }
  }
}

.glist-wrap {
  @extend %gridWrapComm;
}

@each $size, $px in $wrapSize {
  .glist-#{$size}-wrap {
    @extend %gridWrapComm;

    &:not(:first-child) {
      margin-top: $px;
    }
  }
}


// List
%gridListComm {
  display: grid;
  gap: 10px;
  @each $size, $px in $listGapSize {
    &.gap-#{$size} {
      gap: $px;
    }
  }

  :deep(.item-grid) {
    position: relative;
  }

  :deep(.item-grid-package) {
    text-align: center;

    .info-box {
      margin-top: 4px;
    }
  }

  :deep(:is([class^=line-light-gray], [class^=light-gray-], [class^=white], [class^=light-green])[class*=box]) {
    margin: {
      left: 0;
      right: 0;
    }
  }
}

// grid-col{i}-list
@for $i from 2 through 6 {
  .grid-col#{$i}-list {
    @extend %gridListComm;
    grid-template-columns: repeat(#{$i}, 1fr);

    :deep(.item-grid) {
      position: relative;

      .ui-rdo-button {
        width: 100%;
      }
    }

    :deep(.item-grid-full) {
      position: relative;
      grid-column: 1 / span #{$i};
    }

    @if ($i == 2) {
      :deep(.item-grid) {
        .white-lg-box {
          &.bg-normal-delivery, &.bg-kind-delivery {
            padding-bottom: 90px !important;
          }
        }
      }
    }
  }
}

// grid prod list
.grid-list {
  &.gap-prod {
    display: grid;
    grid-template-columns: repeat(2, calc(50% - 6px));
    gap: 24px 12px;
    margin: {
      left: -5px;
      right: -5px;
    }

    :deep(.item-grid) {
      position: relative;

      .thumb-prod {
        .info-box {
          margin: {
            top: 12px;
            left: 5px;
            right: 5px;
          }
        }
      }

      .btn-link {
        z-index: 4;
      }
    }
  }
}

