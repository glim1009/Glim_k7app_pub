@use 'sass:map';
@use '../components/keyframes';
@use '../abstracts/variables';
@use '../abstracts/mixins';

%foldBoxComm {
  margin: {
    left: -5px;
    right: -5px;
  }

  .fold-header {
    @include mixins.justify_width(center);
    position: relative;
    width: 100%;
    padding-right: 35px;

    :deep(.fold-title) {
      width: 100%;
      color: var(--Grayscale-100);

      [class^=btn][class$=xs] {
        position: relative;
        z-index: 2;
      }
    }

    :deep(.flex-center-group) {
      width: 100%;
    }

    .btn-fold {
      position: absolute;
      top: 0;
      left: 0;
      width: 100%;
      height: 100%;
      z-index: 1;
      @include mixins.justify_width(center, end);

      &:after {
        content: '';
        position: absolute;
        right: 5px;
        display: inline-block;
        width: 18px;
        height: 18px;
        vertical-align: top;
        @include mixins.svg_mask('/assets/images/common/comm_ico_arw_down_sm', var(--Grayscale-80));
        @include mixins.prefix(transform, rotateZ(0));
        @include mixins.prefix(transition, transform 0.25s 0.12s variables.$transEaseBounceBack);
      }
    }

    &.is-active {
      .btn-fold {
        &:after {
          @include mixins.prefix(transform, rotateZ(180deg));
        }
      }
    }
  }

  [class^=fold-cont] {
    margin-top: 16px;
  }
}

.fold-box,
.fold-cont-box,
[class^=fold-scont][class*=box] {
  @extend %foldBoxComm;

  :deep([class^=btn-flex][class$=wrap]),
  :deep(:is([class^=line-light-gray], [class^=light-gray-], [class^=white], [class^=light-green])[class$=box]) {
    margin: {
      left: 0;
      right: 0;
    }
  }
}

.fold-box {
  :deep(.fold-header) {

    .fold-title {
      margin-left: 5px;

      .flex-center-group {
        .flex-right {
          .goods {
            @include mixins.font_size_3xl('sb');
          }
        }
      }
    }
  }

  [class^=fold-cont] {
    overflow: hidden;
    margin-top: 16px;
  }
}


.row-bline-list {
  .fold-box {
    :deep(.fold-header) {
      padding: 20px 50px 20px 20px;
      .btn-fold {
        &:after {
          right: 20px;
        }
      }
    }
    :deep([class^=fold-cont]) {
      margin-top: 0;
    }
  }
}

.fold-cont-box {
  border-radius: 15px;
  background-color: var(--Grayscale-0);

  .fold-header {
    padding: 20px 48px 20px 20px;

    :deep(.fold-title) {
      margin-left: 0;
    }

    .btn-fold {
      &:after {
        margin-right: 20px;
      }
    }
  }

  [class^=fold-cont] {
    margin-top: -20px;
    padding: 20px;
    border-radius: 15px;
  }
}

[class^=fold-scont][class*=box] {
  border-radius: 10px;
  background-color: var(--Grayscale-0);

  .fold-header {
    padding: 15px 44px 15px 16px;

    :deep(.fold-title) {
      margin-left: 0;
    }

    .btn-fold {
      &:after {
        margin-right: 16px;
      }
    }
  }

  [class^=fold-cont] {
    margin-top: 0;
    padding: 16px;
    border-top: 1px solid var(--Grayscale-30);
  }
}

.fold-scont-line-light-gray-box {
  border: 1px solid var(--Grayscale-30);

  [class^=fold-cont-light-gray] {
    background-color: var(--Grayscale-20);
  }
}

.fold-overflow-box {
  :deep(:is([class^=line-light-gray], [class^=light-gray-], [class^=white], [class^=light-green])[class*=box]) {
    margin: {
      left: 0;
      right: 0;
    }
  }

  [class^=fold-cont] {
    overflow: hidden;

    &.is-mini {
      height: var(--content-min-height);
    }

    &.is-active {
      height: auto;
      padding-bottom: 16px;
    }
  }

  .fold-header {
    .btn-fold-toggle {
      width: 100%;

      .ico-arw-down-gray-xs {
        @include mixins.prefix(transform, rotateZ(0));
        @include mixins.prefix(transition, transform 0.25s 0.12s variables.$transEaseBounceBack);
      }

      &.is-active {
        .ico-arw-down-gray-xs {
          @include mixins.prefix(transform, rotateZ(180deg));
        }
      }
    }
  }
}




.fold-enter-active {
  //@include mixins.prefix(animation, accordion-down 0.45s ease-in-out);
}

.fold-enter-from, .fold-leave-to {
  //height: 0;
}

.fold-enter-to {
  //height: var(--content-height);
}

/*@keyframes accordion-down {
  0% {
    height: 0
  }

  to {
    height: var(--content-height);
  }
}*/
