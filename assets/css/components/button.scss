@use 'sass:map';
@use '../abstracts/variables';
@use '../abstracts/mixins';

// button size

%btnLgSize {
  height: 54px;
  padding: 0 24px;
  border: 1px solid variables.$colorBlack;
  border-radius: 27px;

  :deep(.text) {
    @include mixins.font_size_xl('sb');

    ~ [class^=ico] {
      margin-left: 4px;
    }
  }

  [class^=ico] {
    ~ :deep(.text) {
      margin-left: 4px;
    }
  }
}

%btnMdSize {
  height: 44px;
  padding: 0 20px;
  border-radius: 22px;

  :deep(.text) {
    @include mixins.font_size_md('sb');

    ~ [class^=ico] {
      margin-left: 4px;
    }
  }

  [class^=ico] {
    ~ :deep(.text) {
      margin-left: 4px;
    }
  }
}

%btnSmSize {
  height: 36px;
  padding: 0 12px;
  border-radius: 18px;

  :deep(.text) {
    @include mixins.font_size_sm('sb');

    ~ [class^=ico] {
      margin-left: 4px;
    }
  }

  [class^=ico] {
    /*@include mixins.device_mobile_ios {
        margin-top: -1px;
    }*/

    ~ :deep(.text) {
      margin-left: 4px;
    }
  }
}

%btnXsSize {
  min-width: 52px;
  height: 30px;
  padding: 0 12px;
  border-radius: 15px;

  :deep(.text) {
    @include mixins.font_size_sm('sb');

    ~ [class^=ico] {
      margin-left: 6px;
    }
  }

  [class^=ico] {
    ~ :deep(.text) {
      margin-left: 6px;
    }
  }
}


// button color

%colorGreen {
  @include mixins.justify_width(center, center, row, true);

  background-color: variables.$colorGreen100;
  border: 1px solid variables.$colorGreen100;

  :deep(.text) {
    color: variables.$colorWhite;
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: variables.$colorGreen120;
    border: 1px solid variables.$colorGreen120;
  }
}

%colorLightGreen {
  @include mixins.justify_width(center, center, row, true);

  background-color: variables.$colorGreen10;
  border: 1px solid variables.$colorGreen10;

  :deep(.text) {
    color: variables.$colorGreen100;
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: variables.$colorGreen120;
    border: 1px solid variables.$colorGreen120;
  }
}

%colorGray {
  @include mixins.justify_width(center, center, row, true);

  background-color: variables.$colorGray90;
  border: 1px solid variables.$colorGray90;

  :deep(.text) {
    color: variables.$colorWhite;
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: variables.$colorGray80;
    border: 1px solid variables.$colorGray80;
  }
}

%colorLightGray {
  @include mixins.justify_width(center, center, row, true);

  background-color: variables.$colorGray20;
  border: 1px solid variables.$colorGray20;

  :deep(.text) {
    color: variables.$colorGray80;
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.3;
  }

  &:active {
    background-color: variables.$colorGray30;
    border: 1px solid variables.$colorGray30;
  }
}

%colorLineGreen {
  @include mixins.justify_width(center, center, row, true);

  background-color: variables.$colorWhite;
  border: 1px solid variables.$colorGreen100;

  :deep(.text) {
    color: variables.$colorGreen100;
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: variables.$colorGreen10;
  }
}

%colorLineOrange {
  @include mixins.justify_width(center, center, row, true);

  background-color: variables.$colorWhite;
  border: 1px solid variables.$colorOrange100;

  :deep(.text) {
    color: variables.$colorOrange100;
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: variables.$colorOrange10;
  }
}

%colorLineGray {
  @include mixins.justify_width(center, center, row, true);

  background-color: variables.$colorWhite;
  border: 1px solid variables.$colorGray60;

  :deep(.text) {
    color: variables.$colorGray80;
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: variables.$colorGray10;
  }
}

%colorLineLightGray {
  @include mixins.justify_width(center, center, row, true);

  background-color: variables.$colorWhite;
  border: 1px solid variables.$colorGray40;

  :deep(.text) {
    color: variables.$colorGray70;
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: variables.$colorGray10;
  }
}

a.btn, button.btn {

  &-green {
    &-lg {
      @extend %colorGreen;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorGreen;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorGreen;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorGreen;
      @extend %btnXsSize;
    }
  }

  &-light-green {
    &-lg {
      @extend %colorLightGreen;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLightGreen;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLightGreen;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLightGreen;
      @extend %btnXsSize;
    }
  }

  &-gray {

    &-lg {
      @extend %colorGray;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorGray;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorGray;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorGray;
      @extend %btnXsSize;
    }
  }

  &-light-gray {

    &-lg {
      @extend %colorLightGray;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLightGray;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLightGray;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLightGray;
      @extend %btnXsSize;
    }
  }

  &-line-green {
    @extend %colorLineGreen;

    &-lg {
      @extend %colorLineGreen;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLineGreen;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLineGreen;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLineGreen;
      @extend %btnXsSize;
    }
  }

  &-line-orange {

    &-lg {
      @extend %colorLineOrange;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLineOrange;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLineOrange;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLineOrange;
      @extend %btnXsSize;
    }
  }

  &-line-gray {

    &-lg {
      @extend %colorLineGray;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLineGray;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLineGray;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLineGray;
      @extend %btnXsSize;
    }
  }

  &-line-light-gray {

    &-lg {
      @extend %colorLineLightGray;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLineLightGray;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLineLightGray;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLineLightGray;
      @extend %btnXsSize;
    }
  }
}

/* text button */
.tbtn {
  &-md {
    display: inline-block;
    vertical-align: top;

    :deep(.text) {
      display: inline-block;
      color: variables.$colorGray80;
      @include mixins.font_size_xl(sb);
      vertical-align: top;

      ~ [class^=ico] {
        margin: {
          top: 2px;
          left: 2px;
        }
      }
    }

    [class^=ico] {
      ~ :deep(.text) {
        margin-left: 2px;
      }
    }
  }

  &-sm {
    display: inline-block;
    vertical-align: top;

    :deep(.text) {
      display: inline-block;
      color: variables.$colorGray80;
      @include mixins.font_size_lg;
      vertical-align: top;

      ~ [class^=ico] {
        margin: {
          top: 2px;
          left: 2px;
        }
      }
    }

    [class^=ico] {
      ~ :deep(.text) {
        margin-left: 2px;
      }
    }
  }

  &-xs {
    display: inline-block;
    vertical-align: top;

    :deep(.text) {
      display: inline-block;
      color: variables.$colorGray80;
      @include mixins.font_size_md(md, 18px);
      vertical-align: top;

      ~ [class^=ico] {
        margin: {
          left: 2px;
        }
      }
    }

    .ico-arwright-xs {
      margin-top: 1px;
    }

    [class^=ico] {
      ~ :deep(.text) {
        margin-left: 2px;
      }
    }
  }
}

/* text button gap */
[class^=tbtn] {
  + [class^=tbtn] {
    margin-top: 10px;
  }
}

/* btn-wrap */
%btnFlexWrap {
  @include mixins.justify_width(start, start);

  [class^=btn] {
    flex: 1;
    width: 100%;
    min-width: auto;

    ~ [class^=btn] {
      margin-left: 6px;
    }
  }
}

%btnAutoWrap {
  @include mixins.justify_width(start, start);

  [class^=btn] {
    flex: none;
    width: auto;

    ~ [class^=btn] {
      margin-left: 6px;
    }
  }
}

%btnAutoRightWrap {
  @include mixins.justify_width(start, start);

  [class^=btn], [class^=tbtn] {
    flex: none;
    width: auto;
    margin-left: auto;

    ~ [class^=btn], [class^=tbtn] {
      margin-left: 6px;
    }
  }
}

%btnAutoCenterWrap {
  @include mixins.justify_width(start, start);

  [class^=btn], [class^=tbtn] {
    flex: none;
    width: auto;
    margin: 0 auto;
  }
}

%btnFullWrap {
  @include mixins.justify_width(center, center, column);
  flex-wrap: wrap;

  [class^=btn], [class^=tbtn] {
    flex: 1 auto;
    width: 100%;
    min-width: initial;

    ~ [class^=btn], ~ [class^=tbtn] {
      margin: {
        top: 10px;
        left: 0;
      }
    }
  }
}

$btntSize: ('sm': 10px, 'md': 16px, 'lg': 24px, 'xl': 30px);

.btn-flex-wrap {
  @extend %btnFlexWrap;
}

.btn-auto-wrap {
  @extend %btnAutoWrap;
}

.btn-auto-right-wrap {
  @extend %btnAutoRightWrap;
}

.btn-auto-center-wrap {
  @extend %btnAutoCenterWrap;
}

.btn-full-wrap {
  @extend %btnFullWrap;
}


@each $size, $px in $btntSize {
  .btn-flex-#{$size}-wrap {
    @extend %btnFlexWrap;
    margin-top: $px;
  }
  .btn-auto-#{$size}-wrap {
    @extend %btnAutoWrap;
    margin-top: $px;
  }
  .btn-auto-right-#{$size}-wrap {
    @extend %btnAutoRightWrap;
    margin-top: $px;
  }
  .btn-auto-center-#{$size}-wrap {
    @extend %btnAutoCenterWrap;
    margin-top: $px;
  }
  .btn-full-#{$size}-wrap {
    @extend %btnFullWrap;
    margin-top: $px;
  }
}
