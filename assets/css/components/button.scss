@use 'sass:map';
@use '../abstracts/variables';
@use '../abstracts/mixins';

// button size

%btnLgSize {
  height: 54px;
  padding: 0 24px;
  border: 1px solid var(--Grayscale-100);
  border-radius: 27px;

  .text {
    @include mixins.font_size_xl;

    ~ [class^=ico] {
      margin-left: 4px;
    }
  }

  [class^=ico] {
    ~ .text {
      margin-left: 4px;
    }
  }
}

%btnMdSize {
  height: 44px;
  padding: 0 20px;
  border-radius: 22px;

  .text {
    @include mixins.font_size_lg;

    ~ [class^=ico] {
      margin-left: 4px;
    }
  }

  [class^=ico] {
    ~ .text {
      margin-left: 4px;
    }
  }
}

%btnSmSize {
  height: 36px;
  padding: 0 16px;
  border-radius: 22px;

  .text {
    @include mixins.font_size_md;

    ~ [class^=ico] {
      margin-left: 4px;
    }
  }

  [class^=ico] {
    ~ .text {
      margin-left: 4px;
    }
  }
}

%btnXsSize {
  height: 30px;
  padding: 0 12px;
  border-radius: 15px;

  .text {
    @include mixins.font_size_md('md');

    ~ [class^=ico] {
      margin-left: 2px;
    }
  }

  [class^=ico] {
    ~ .text {
      margin-left: 2px;
    }
  }
}


// button color

%colorGreen {
  @include mixins.justify_width(center, center, row, true);

  background-color: var(--Primary-Green-100);
  border: 1px solid var(--Primary-Green-100);

  .text {
    color: var(--Grayscale-0);
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: var(--Primary-Green-120);
    border: 1px solid var(--Primary-Green-120);
  }
}

%colorLightGreen {
  @include mixins.justify_width(center, center, row, true);

  background-color: var(--Primary-Green-10);
  border: 1px solid var(--Primary-Green-10);

  .text {
    color: var(--Primary-Green-100);
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: var(--Primary-Green-120);
    border: 1px solid var(--Primary-Green-120);
  }
}

%colorGray {
  @include mixins.justify_width(center, center, row, true);

  background-color: var(--Grayscale-90);
  border: 1px solid var(--Grayscale-90);

  .text {
    color: var(--Grayscale-0);
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: var(--Grayscale-80);
    border: 1px solid var(--Grayscale-80);
  }
}

%colorLightGray {
  @include mixins.justify_width(center, center, row, true);

  background-color: var(--Grayscale-20);
  border: 1px solid var(--Grayscale-20);

  .text {
    color: var(--Grayscale-80);
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.3;
  }

  &:active {
    background-color: var(--Grayscale-30);
    border: 1px solid var(--Grayscale-30);
  }
}

%colorLineGreen {
  @include mixins.justify_width(center, center, row, true);

  background-color: var(--Grayscale-0);
  border: 1px solid var(--Primary-Green-100);

  .text {
    color: var(--Primary-Green-100);
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: var(--Primary-Green-10);
  }
}

%colorLineOrange {
  @include mixins.justify_width(center, center, row, true);

  background-color: var(--Grayscale-0);
  border: 1px solid var(--Primary-Orange-100);

  .text {
    color: var(--Primary-Orange-100);
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: var(--Primary-Orange-10);
  }
}

%colorLineGray {
  @include mixins.justify_width(center, center, row, true);

  background-color: var(--Grayscale-0);
  border: 1px solid var(--Grayscale-60);

  .text {
    color: var(--Grayscale-80);
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: var(--Grayscale-10);
  }
}

%colorLineLightGray {
  @include mixins.justify_width(center, center, row, true);

  background-color: var(--Grayscale-0);
  border: 1px solid var(--Grayscale-40);

  .text {
    color: var(--Grayscale-70);
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: 0.4;
  }

  &:active {
    background-color: var(--Grayscale-10);
  }
}

a.btn, button.btn {

  &-green {
    &-lg {
      @extend %colorGreen;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorGreen;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorGreen;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorGreen;
      @extend %btnXsSize;
    }
  }

  &-light-green {
    &-lg {
      @extend %colorLightGreen;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLightGreen;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLightGreen;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLightGreen;
      @extend %btnXsSize;
    }
  }

  &-gray {
    &-lg {
      @extend %colorGray;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorGray;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorGray;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorGray;
      @extend %btnXsSize;
    }
  }

  &-light-gray {
    &-lg {
      @extend %colorLightGray;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLightGray;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLightGray;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLightGray;
      @extend %btnXsSize;
    }
  }

  &-line-green {
    @extend %colorLineGreen;

    &-lg {
      @extend %colorLineGreen;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLineGreen;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLineGreen;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLineGreen;
      @extend %btnXsSize;
    }
  }

  &-line-orange {
    &-lg {
      @extend %colorLineOrange;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLineOrange;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLineOrange;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLineOrange;
      @extend %btnXsSize;
    }
  }

  &-line-gray {
    &-lg {
      @extend %colorLineGray;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLineGray;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLineGray;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLineGray;
      @extend %btnXsSize;
    }
  }

  &-line-light-gray {
    &-lg {
      @extend %colorLineLightGray;
      @extend %btnLgSize;
    }

    &-md {
      @extend %colorLineLightGray;
      @extend %btnMdSize;
    }

    &-sm {
      @extend %colorLineLightGray;
      @extend %btnSmSize;
    }

    &-xs {
      @extend %colorLineLightGray;
      @extend %btnXsSize;
    }
  }
}

/* text button */
$tBtnSize: ('xs', 'sm', 'md', 'lg');
%tbtnComm {
  display: inline-block;
  vertical-align: top;
  line-height: 1;

  .text {
    display: inline-block;
    color: var(--Grayscale-80);
    vertical-align: top;
  }

  &[disabled], &[aria-disabled=true], &.disabled {
    opacity: .4;
  }
}

@each $size in $tBtnSize {
  [class^=tbtn-][class*=#{$size}] {
    @extend %tbtnComm;

    @if ($size == 'xs') {
      .text {
        @include mixins.font_size_md('md');
      }
      [class^=ico][class$=xs] {
        margin: {
          top: 2px;
        }
      }
    } @else if ($size == 'sm') {
      .text {
        @include mixins.font_size_lg('md');
      }
      [class^=ico][class$=xs] {
        margin: {
          top: 2px;
        }
      }
      &[class*=-right-arw] {
        position: relative;
        display: block;
        width: 100%;
        text-align: left;

        .text {
          font-weight: variables.$fontWeightSemibold;
          color: var(--Grayscale-100);
        }

        &:after {
          content: '';
          display: block;
          position: absolute;
          top: 50%;
          right: 0;
          width: 16px;
          height: 16px;
          margin-top: -9px;
          @include mixins.svg_mask('/assets/images/common/comm_ico_arw_right_xs', var(--Grayscale-80));
        }
      }
    } @else if ($size == 'md') {
      .text {
        @include mixins.font_size_xl;
      }
      [class^=ico][class$=xs] {
        margin: {
          top: 3px;
        }
      }
      [class^=ico][class$=sm] {
        margin: {
          top: 2px;
        }
      }
    } @else if ($size == 'lg') {
      .text {
        @include mixins.font_size_2xl;
        color: var(--Grayscale-100);
      }
      [class^=ico][class$=xs] {
        margin: {
          top: 3px;
        }
      }
      [class^=ico][class$=sm] {
        margin: {
          top: 2px;
        }
      }
    }

    [class^=ico] {
      ~ .text {
        margin-left: 6px;
      }
    }

    // type underline
    &[class$=-udl] {
      .text {
        text-decoration: underline;
      }
    }
  }
}

/* btn-wrap */
%btnFlexWrap {
  @include mixins.justify_width(start, start);

  [class^=btn] {
    flex: 1;
    width: 100%;
    min-width: auto;

    ~ [class^=btn] {
      margin-left: 6px;
    }
  }
}

%btnAutoWrap {
  @include mixins.justify_width(start, start);

  [class^=btn] {
    flex: none;
    width: auto;

    ~ [class^=btn] {
      margin-left: 6px;
    }

    &.btn-full {
      flex-grow: 1;
    }
  }
}

%btnAutoRightWrap {
  @include mixins.justify_width(start, start);

  [class^=btn], [class^=tbtn] {
    flex: none;
    width: auto;
    margin-left: auto;

    ~ [class^=btn], [class^=tbtn] {
      margin-left: 6px;
    }
  }
}

%btnAutoCenterWrap {
  @include mixins.justify_width(start, start);

  [class^=btn], [class^=tbtn] {
    flex: none;
    width: auto;
    margin: 0 auto;
  }
}

%btnFullWrap {
  @include mixins.justify_width(center, center, column);
  flex-wrap: wrap;

  [class^=btn], [class^=tbtn] {
    flex: 1 auto;
    width: 100%;
    min-width: initial;

    ~ [class^=btn], ~ [class^=tbtn] {
      margin: {
        top: 6px;
        left: 0;
      }
    }

    ~ [class^=btn][class*=lg], ~ [class^=tbtn][class*=lg] {
      margin: {
        top: 10px;
        left: 0;
      }
    }

    ~ [class^=tbtn] {
      margin-top: 10px;
    }
  }

  &:has([class^=bar][class$=group]) {
    [class^=tbtn] {
      width: auto;

      ~ [class^=tbtn] {
        margin-top: 0;
      }
    }
  }
}

$btntSize: ('sm': 10px, 'md': 16px, 'lg': 24px, 'xl': 30px);

.btn-flex-wrap {
  @extend %btnFlexWrap;
  margin: {
    left: -5px;
    right: -5px;
  }

  &.prod-detail {
    gap: 6px;

    > .btn-line-light-gray-lg {
      padding: {
        left: 14px;
        right: 14px;
      }
    }

    .btn-prod-wrap {
      flex: 1 0 auto;
      width: calc(100% - 80px);
      margin: 0;
    }
  }
}

.btn-auto-wrap {
  @extend %btnAutoWrap;
}

.btn-auto-right-wrap {
  @extend %btnAutoRightWrap;
}

.btn-auto-center-wrap {
  @extend %btnAutoCenterWrap;
}

.btn-full-wrap {
  @extend %btnFullWrap;
}


.btn-prod-wrap {
  overflow: hidden;
  @include mixins.justify_width(start, start);
  margin: 0 -5px;
  background-color: var(--Primary-Green-100);
  border-radius: 27px;

  [class^=btn-] {
    position: relative;
    flex: 1;
    width: 100%;
    min-width: auto;
    border-radius: 0;

    ~ [class^=btn-] {
      &:before {
        content: '';
        position: absolute;
        top: 50%;
        left: 0;
        width: 1px;
        height: 14px;
        margin-top: -7px;
        background-color: rgba(var(--Grayscale-0-RGB), 50%);
        border-radius: 24px;
      }
    }
  }

  &:has(.cta-info-box) {
    opacity: 0.4;
  }

  .cta-info-box {
    position: relative;
    flex: 1;

    @include mixins.justify_width(center, center, row, true);
    width: 100%;
    height: 54px;
    padding: 0 24px;

    .text {
      display: inline-block;
      @include mixins.font_size_xl('sb');
      color: var(--Grayscale-0);
      text-align: center;
      vertical-align: top;
    }
  }
}

@each $size, $px in $btntSize {
  .btn-flex-#{$size}-wrap {
    @extend %btnFlexWrap;
    margin: {
      top: $px;
      left: -5px;
      right: -5px;
    }
  }
  .btn-auto-#{$size}-wrap {
    @extend %btnAutoWrap;
    margin-top: $px;
  }
  .btn-auto-right-#{$size}-wrap {
    @extend %btnAutoRightWrap;
    margin-top: $px;
  }
  .btn-auto-center-#{$size}-wrap {
    @extend %btnAutoCenterWrap;
    margin-top: $px;
  }
  .btn-full-#{$size}-wrap {
    @extend %btnFullWrap;
    margin-top: $px;
  }
}

